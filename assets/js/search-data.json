{
  
    
        "post0": {
            "title": "Our Privacy Opportunity, Part 1",
            "content": "I started taking The Private AI Series by OpenMined . The series contains four courses, all are free. Only the first one is online at the time of writing (05. Jan 2021). . Our Privacy Opportunity | Foundations of Private Computation | Federated Learning Across Enterprises | Federated Learning on Mobile | The first course is non-technical and contains about 8 hours of video, taught by Emma Bluemke and Andrew Trask. Additionally, they interview many experts. The course aims to provide a high-level overview of privacy, what it means, where it currently fails, and how possible solutions look. One key point is that there are new privacy-enhancing technologies on the rise that will change the way how humans collaborate. This brings with it many career and business opportunities. . If you’re interested, sign up at courses.openmined.org. I will take at least the first, non-technical course and will decide later whether I dive deeper with the technical courses. . Lesson 1 is introductory. This is my summary of Lesson 2 of Our Privacy Opportunity, I wrote it for my forgetful self, but maybe it will be helpful for others - so here it is. . Concept 1: Society Runs on Information Flows . This course is about privacy-transparency trade-offs and how they affect a huge number of problems. This lesson walks through some of the most important challenges to society and identifies how the privacy-transparency tradeoff underpins them. Improving information flows, by solving this tradeoff, can help us in many areas like disinformation, scientific innovation, and even democracy itself. . Information flows are everywhere! We share our medical information with our doctor, we share our location with an app to get directions, we share our heart rates and sleeping patterns in hopes of improving our well-being. Every day, we share personal information to exchange goods, receive services, and in general, to collaborate. Sharing information is a part of almost every aspect of our life. You have to fully grasp this statement to understand how these flows are going to change in the future. . Information flows have two fundamental failure modes, where they fail to accomplish their purpose regarding privacy and transparency. These will be covered through case studies. . Concept 2: Information Flow . What is an information flow? Let&#39;s take the simple example of email. A sender, a message, a receiver. Hit send and that&#39;s an information flow. But it&#39;s much more nuanced than just the three attributes sender, message, receiver: . Should other people than the receiver be allowed to read it? | Would I be comfortable with the receiver forwarding my email, is this the intended information flow? | What about the mail provider, they could probably read it, but I believe they just choose not to. | Do I want the mail provider to read my mail only for a specific purpose, like for spam detection, but not for targeted advertising? | Am I sending my exact identity with the email? Anonymously? Or a mix: as a member of group? | Identity of the recipient: do I know exactly who they are? When I&#39;m sending the mail to a specific group like a doctor&#39;s office, who reads it? | But also: can the receiver have confidence in sender identity, whaf if my account was hacked? | . Sending an email is probably one of the most straight-forward information flows and still there are many questions. These questions and more exist around every information flow. . New communication channels emerged. Snapchat deletes the messages once they&#39;ve been read and prohibits forwarding or screenshotting. WhatsApp or Signal use end-to-end encryption for messages so it&#39;s impossible for anyone other than the intended recipient to read them. . Users switch to these services because of seemingly tiny changes to the guarantees around information flow. This is the beginning of a revolution! . Every part of the human experience is soaked in information flows. Since the beginning of human collaboration. . A more formal definition: An information flow is a flow of bits from a sender to a receiver. The sender and receiver could either be an exact individual, a member of a group, or an anonymous individual. The identity of the sender, the receiver, and the content of the message itself can be probabilistic! . Concept 3: The Privacy Dilemma . My location is public information for everybody standing on the same street. So why do I feel uncomfortable with my location being tracked? Or Google Street View: why are people having trouble with Google taking photos of them in their front yard, when anybody could come by and see them exactly there? Because public information can become so much more public that it starts to bother us. . Privacy is not about secrecy. People feel that their privacy is violated if information flows in a way they didn&#39;t expect and didn&#39;t like. It&#39;s all about appropriateness. Privacy is about flow, not the information itself. . Conceptual Integrity: sharing the same information might be private in one context, but not in another context. It&#8217;s about achieving appropriate information flow. Example: Facial recognition software. My face is public information as soon as I leave the house. So why is facial recognition bad? Not only because it could be misused (mass surveillance), but because I don&#39;t consent to the information flow. . Two main differences between facial recognition as ID and normal ID: . I can&#39;t change my face. If it gets in the wrong hands, you can&#39;t just get a new password or credit card. | It&#39;s identification without my consent. The information flow is not triggered by me, but by whatever system is watching me. | Concept 4: Data is Fire &#128293; . There is the notion that &quot;data is the new oil&quot;. A better analogy is &quot;data is like fire&quot;. . It can be duplicated | It can help us prosper and solve problems | It can cause irreparable damage if misused | . And this dual-use for good or harm is true for all kinds of data, not just data that is clearly sensitive like medical data. . Privacy dilemmas . . A privacy dilemma is a trade-off whether to reveal information, where revealing that information causes some social good (like medical research) but could also lead to harm (like the misuse of medical data). Privacy dilemmas have various costs. The most obvious is the possible privacy violation. But there are other, societal costs: a failure to accomplish important outcomes of information flow (scientific progress, meaningful relationships, accountability) . Privacy dilemmas are untapped market opportunities! . Everything can be private data . Your grocery shopping list is boring, right? Not always. You might not care now whether somebody knows you&#39;re buying bread. But when you suddenly stop buying bread (and rice and other carbs) it might be an indication of the diagnosis of diabetes. Suddenly it&#39;s very private information that you might not want to share. . Anonymization doesn&#8217;t work! Even when names are removed from data, other features can be used to identify you, thanks to the power of machine learning (i.e., 5 movies you watched last year and roughly when you watched them). . Anonymization works so badly, that systematically exploiting its weaknesses can be a core business model. Emma gives an example of a company that buys anonymized health data and distributes it to insurance companies. They can then for example raise insurance costs for high-risk communities like poor neighborhoods that are more likely to get sick. Harm is done without knowing any one individual! . Another example: Strava released an anonymized heatmap that revealed home addresses of individuals (because they cycle from home to work) and the location of US military bases. So, privacy can be relevant not only on an individual level but on an organizational or even national security level. . Targeting . Acting on information. Advertisement, targeted disinformation, shaming, fraud, physical harm. Pinpointing someone&#39;s identity might not even be necessary. As long as someone is able to reach you (via your browser, your church, your neighborhood, ...), your name is absolutely not necessary to do harm. . Concept 5: The Transparency Dilemma . Info:A transparency dilemma is when someone is forced to make a decision without having access to the information they need to make it. Sometimes the information flows don&#39;t exist at all (trusting a stranger to fix your tire), sometimes they are not verified (online reviews). . The solution to privacy is not to stop all information flow, lock all data. This would prevent good use of data (think medical care, climate research) and also make it easier to have undesirable outcomes (money laundering, lack of accountability). Maximizing privacy could lead to a lack of transparency! . Concept 6: The Privacy-Transparency Pareto Frontier . . We used to have a classic trade-off between privacy and transparency. If you made all data private, you would have solved the privacy dilemma, but there would not be any transparency. If you made everything public, there would be no transparency dilemma, but no privacy left. With new technologies, you can actually move the pareto trade-off and have more of both, simultaneously! . . This will have downstream effects on every industry handling valuable, sensitive, or private data. . Governments don&#39;t have to choose between preserving the privacy of their citizens or protect national security, now they can do both. Researchers don&#39;t have to decide whether or not to share their data, now they can have the benefits from both. Corporations previously had to choose between the privacy of their users and the accuracy of their products and services, now they can have the benefits of both. . Concept 7: Research is Constrained by Information Flows . Research would profit if data could be more easily shared. More data would be available, it would be available faster, and experiments could be replicated easily. . Concept 8: Healthy Market Competition for Information Services . Most services that handle your data are, per default, services that lock you in. Because of privacy concerns, they are inherently anti-competitive. And more intense privacy restrictions actually make it harder for other new companies to compete (because you can&#39;t move your data to another provider). . GDPR in the EU: a groundbreaking piece of legislation that is being copied around the world. . People now have rights over their data. For example: . Right to be forgotten | Right to see which data a company has of them | . Interoperability: You should be able to move to a different company and take your data with you. Endless business opportunities. . Privacy is not only about preventing information from being shared. Sometimes satisfying privacy is about forcing companies to share or delete your data in a specific way or at a specific time. . Concept 9: Data, Energy, and the Environment . Example: Smart meters can be highly valuable for the switch to renewable energy. But they can also be extremely privacy invasive, because you can build rich patterns on how your daily habits are, when you are or are not at home etc. . In Taiwan, there was a movement to provide air quality measurements through &quot;Air Boxes&quot; throughout the country. The government didn&#39;t invest heavily in this technology, but private citizens did. And they were able to coordinate with millions of people to get this system working! . Concept 10: Feedback Mechanisms &amp; Information Flows . Feedback mechanisms today are often broken or non-existent. Examples: . Consumer products: How do I know whether a product is any good? Amazon Reviews are easy to fake, and the real ones come from only the most polarized users . Politics: A multiple choice question between a few candidate every 4 years is a terrible feedback system for reviewing the legislature of the past 4 years. . Public safety: safety and security are not achieved by a lot of police, but by &quot;eyes on the street&quot;, normal people watching out. It&#39;s at the same time more effective than a government-lead approach, and less intrusive! Some of the safest countries, like Taiwan, have among the lowest numbers of police per capita. . Concept 11: Democracy &amp; Public Health Conversation . Democracy is messy. Opinions are formed via social groups. In recent years, there was an uptick in polarization, one of the reasons probably being social media, where algorithms maximize engagement. . A better way can be found in Taiwan, with the Polis system. A community-built, nation-wide application that supports conversation between millions of users in Taiwan. It&#39;s not optimized for engagement, but for consensus. People can enter their opinions in written form (tweet-like), and a combination of NLP and voting clusters these opinions. Turns out, opinions aren&#39;t actually individual. There are less opinions than there are people because opinions are formed socially. However, the social groups that form our opinions aren&#39;t fixed but constantly changing. . So, some people emerge as being representative for specific opinions and become thought leaders for this particular matter. But now they must come up with a formulation that will get the most consent across opinions! [Not sure if I got this exactly right] . Example: Uber wanted to come to Taiwan. Very polarized opinions. The solution was: Uber was permitted a temporary license in Taiwan. During this time, the public Taxi sector should adopt the efficient, algorithmic approaches from Uber while maintaining labor standards. If they would succeed, Uber would be banned. If they failed, Uber would be banned unless they met the labor standards of the public system. That put just enough pressure on both sides, and in the end, the public system did improve so much that Uber was excluded. . Concept 12: New Market Incentives . Many online (information-based) companies rely on attention (engagement) as their key metric. For some, this makes intuitive sense because their revenue is ad-driven. But even companies that run on a subscription model, like Netflix, do it. The Netflix CEO even said, they are competing with the time you spend sleeping. The question is: why? . One answer is, it&#39;s a readily available metric that is fine-grained and allows for optimization. If Netflix just used the number of subscribers (and that&#39;s the value they actually try to increase), it would be too coarse. Only if a movie was that good or that bad that users actually subscribed/unsubscribed it would be measurable. . Attention as a metric does work, and it is probably fine at a small scale. But at large scale and taken to the extremes it can cause harm, see the Netflix/sleep example. . A better way: Netflix could try to optimize their experience to improve the users&#39; sleep. But how would they measure it and train an algorithm on it? Fitbits track sleep but is it safe to share this data with Netflix? In general, these alternative metrics are called wellness metrics and can improve our lives. . Technology isn&#8217;t inherently addictive! Better products are possible. But we need to solve the privacy-transparency trade-off. . Concept 13: Safe Data Networks for Business, Governance and R&amp;D . Free/easy (?) information flow across EU states was proposed. When a company wants to introduce a product in all member states of the EU, it needs data from all these states to customize its product. So, for example a company in France needs data from Germany. . But, as shown in Concept 4, new mathematical tools allow reconstruction of personal details even from anonymized datasets. Therefore, we need to build trust to allow sharing of sensitive data. . Today, there is the technology available that allows privacy-preserving data analysis. Imagine the data in question never actually moves. It would remain on a server in Germany, but the French company could still work with it! . Concept 14: Conflict, Political Science &amp; Information Flows . One rational explanation of war: Mutual Optimism. It&#39;s extremely hard to predict the outcome of a battle, a war. Both sides come up with an estimate that says, &quot;we&#39;re more likely than not to win&quot;. The sum of the estimates is greater than 1. And that&#39;s why nations go to war. . A way to share private military information to determine the winner (in a digital war game) without actually giving the opponent this information could potentially avoid wars. . This is true for other conflicts as well, legal disputes, commercial competition. If the winner could be determined ahead some conflicts wouldn&#39;t be fought. . Moving the privacy-transparency trade-off is essential here as well. . Concept 15: Disinformation &amp; Information Flows . The flow of news is one of the most important information flows in the world. How do you know that what you read in the news is actually true? . Naturally, before the invention of the printing press, people had the power to talk to maybe 50 people at the same time. For a story to be shared outside your own social circle, you would have to convince other people to talk about it. Very comparable to the R number in infectious diseases. A baseless rumor might have a natural R value of 0.01 (1 in a 100 people would spread it). But today, where the average person has hundreds of contacts on social media, the R value is easily 10s or 100s of times bigger and fake news and rumors can spread. . How to check if news is true? . Just wait for humans to adjust to the internet? Bad idea, when we look at the printing press, it took hundreds of years and many conflicts until humans adjusted to it. | Have social media platforms check every bit that is published? Not feasible for hundreds of millions of users. | Have AI and machine learning check whether a piece of news is true? Probably a bad idea in the long run, because news is an information bottleneck. You receive a text message &quot;I love you&quot;. Can you tell whether it&#39;s true just by looking at it? No! You have to have knowledge of the world. So, detecting fake news just by reading it is impossible (you could randomly generate a story that actually happened in the real world). | Just get off social media? Maybe we&#39;re just not supposed be interconnected with that many people? | . The most interesting solution is currently being deployed in Taiwan: . A platform (g0v, pronounced &quot;gov zero&quot;) that people interact on, and trained volunteers comment on suspicious stories with other sources one might check. Because these comments come from people that you actually know or from your local community, not from a state&#39;s official or a platform, you already have a level of trust. . Two groups of ideas that seem to work highly effective: . It&#39;s not so much about detecting misinformation and taking it down. It&#39;s more about fostering a national community that helps each other filter between truths and lies. People are relying on existing interpersonal relationships, instead of having to trust the state or the platform. | Taiwan is using technology and intentional narratives such as humor to foster trust between civil society and the state. Humor over rumor! . It&#8217;s incredibly important to consider how societies historically dealt with misinformation. It doesn&#39;t fix the problem to let the platforms take down false posts. People are curious and won&#39;t just accept this as &quot;huh, this is false then&quot;. | The beauty of Audrey Tang&#39;s work (g0v): constructing information flows that are healthy for society. Not thinking about the most efficient way to prevent a data flow. But to activate existing ways to prevent disinformation: get people to help their friends and use humor. . Conclusion . The privacy-transparency trade-off or even privacy in general is in service of a higher aim: creating information flows within society that creates social good. This is the true aim. . Privacy technology is not just about privacy! Don&#39;t sit and look for use cases that scream &quot;privacy&quot;. This is totally defensive. Instead, ask the questions: How can society accomplish its goals with less risk, higher accuracy, faster, and with better aligned incentives than ever before, through better flows of information. . That is the promise of privacy-enhancing technology and has the potential to radically improve every aspect of how we share information. . Entrepreneurial opportunities, regulatory opportunities, investing opportunities: It&#39;s not about hiding data; it&#39;s about enabling specific information flows (and just these!) to maximize social good. .",
            "url": "https://deeplearning.berlin/online%20courses/privacy/the%20private%20ai%20series/openmined/2021/01/05/Our-Privacy-Opportunity-Part-1.html",
            "relUrl": "/online%20courses/privacy/the%20private%20ai%20series/openmined/2021/01/05/Our-Privacy-Opportunity-Part-1.html",
            "date": " • Jan 5, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Understanding fastai's Midlevel API",
            "content": "Even after going through the course and book, I didn&#39;t feel comfortable with the numerous classes and methods that fastai offers for data processing. I felt that it would be easy once I understood it, but it just didn&#39;t click right away. So here I try to present the most important classes and why they are useful. . This is by no means a complete overview, but just an exploration with minimal examples. . For a deeper dive, please check out chapter 11 of fastbook, Wayde Gilliam&#39;s awesome blog post, or Zach Mueller&#39;s walk with fastai2. . Transforms . A Transform in general is an object that can be called (behaves like a function) and has an optional setup method that initializes an inner state, and an optional decode method that will reverse the function. . In general, our data is always in tuples of (input,target), although you can have more than one input or one target. When applying a transform, it should be applied to the elements of the tuple separately. . . . Transforms are usually applied on tuples. . When you only want to implement the encoding behaviour of a transform, it can be defined via the @Transform decorator: . @Transform def lowercase(x:str): return str.lower(x) lowercase(&quot;Hello, Dear Reader&quot;) . &#39;hello, dear reader&#39; . Type dispatch . Transforms can be defined so they apply only to certain types. This concept is called type dispatch and is provided by fastcore, which I&#39;ll cover in a future post :-) . @Transform def square(x:int): return x**2 square((3, 3.)) . (9, 3.0) . Notice the type annotation for x. In this case, this is not merely a helpful annotation like in pure Python, but it actually changes the behaviour of the function! The square transform is only applied to elements of the type int. When we don&#39;t define the type, a transform is applied on all types. . A more complex transform . If you want to also define the setup and decode methods, you can inherit from Transform: . class DumbTokenizer(Transform): def setups(self, items): vocab = set([char for text in items for char in text]) self.c2i = {char: i for i, char in enumerate(vocab)} self.i2c = {i: char for i, char in enumerate(vocab)} def encodes(self, x): return [self.c2i.get(char, 999) for char in x] def decodes(self, x): return &#39;&#39;.join([self.i2c.get(n, &#39; ? &#39;) for n in x]) . texts = [&quot;Hello&quot;, &quot;Bonjour&quot;, &quot;Guten Tag&quot;, &quot;Konnichiwa&quot;] tokenizer = DumbTokenizer() tokenizer.setup(texts) encoded = tokenizer(&quot;Hello!&quot;) encoded . [9, 6, 2, 2, 4, 999] . Now this is a representation that a machine learning model can work with. But we humans can&#39;t read it anymore. To display the data and be able to analyze it, call decode on the result: . tokenizer.decode(encoded) . &#39;Hello ? &#39; . So here we defined a (very dumb) tokenizer. The setups method receives a bunch of items that we pass in. It creates a vocabulary of all characters that appear in items. In encodes we transform each character to a number in an index. When the character is not found in the vocabulary, it is replaced with a 999 token. decodes reverses this transform as good as it can. . Notice the ? in the decoded representation instead of !. Since there was no ! in the initial texts, the tokenizer replaced it with the token for &quot;unkown&quot;, 999. This is then replaced with ? during decoding. . By the way: you might have noticed that in the DumbTokenizer class we defined the methods setups, encodes and decodes, but on the instance tokenizer we call methods with slightly different names (setup, decode) or even the instance directly: tokenizer(...). The reason for this is that fastai applies some magic in the background, for example it checks that the type is not changed by the transforms. . Pipeline . A Pipeline is just an easy way to apply a list of transforms, in order. . tfms = Pipeline([lowercase, tokenizer]) encoded = tfms(&quot;Hello World!&quot;) encoded . [17, 6, 2, 2, 4, 11, 5, 4, 0, 2, 999, 999] . Pipeline also supports decoding of an item: . tfms.decode(encoded) . &#39;hello worl ? ? &#39; . Because we didn&#39;t define a decodes method for lowercase, this transform cannot be reversed. The decoded result consists only of lowercase letters. . What Pipeline doesn&#39;t provide is support for the setup of the transforms. When you want to apply a pipeline of transforms on a list of data, TfmdLists comes to the rescue. . TfmdLists . At first, your data is usually a set of raw items (like filenames or rows in a dataframe) to which you want to apply some transforms. To combine your pipeline of transforms with your set of raw items, use TfmdLists. . texts = [&quot;Hello&quot;, &quot;Bonjour&quot;, &quot;Guten Tag&quot;, &quot;Konnichiwa&quot;] tls = TfmdLists(texts, [DumbTokenizer]) . When initialized, TfmdLists will call the setup method of each Transform in order, providing it with all the items of the previous Transform. To get the result of the pipeline on any raw element, just index into the TfmdLists: . encoded = tls[1] encoded . [8, 4, 14, 15, 4, 19, 0] . tls.decode(encoded) . &#39;Bonjour&#39; . Training and validation sets . The reason that TfmdLists is named with an s (lists in plural) is that it can handle a training and a validation set. Use the splits argument to pass . the indices of the elements that should be in the training set | the indices of the elements that should be in the validation set. | . We will just do this by hand in our toy example. The training set will be &quot;Hello&quot; and &quot;Guten Tag&quot;, the other two go in the validation set. . texts = [&quot;Hello&quot;, &quot;Bonjour&quot;, &quot;Guten Tag&quot;, &quot;Konnichiwa&quot;] splits = [[0,2],[1,3]] tls = TfmdLists(texts, [lowercase, DumbTokenizer], splits=splits) . We can then access the sets through the train and valid attributes: . encoded = tls.train[1] encoded, tls.decode(encoded) . ([3, 7, 1, 6, 4, 8, 1, 0, 3], &#39;guten tag&#39;) . Let&#39;s look at at word in the validation set: . encoded = tls.valid[0] encoded, tls.decode(encoded) . ([999, 2, 4, 999, 2, 7, 999], &#39; ? on ? ou ? &#39;) . Ouch, what happened to our &quot;Bonjour&quot; here? When TfmdLists automatically called the setup method of the transforms, it only used the items of the training set. Since there was no b, j or r in our training data, the tokenizer treats them as unknown characters. . . The setup methods of the transforms receive only the items of the training set. . Don&#39;t we need labels? . Maybe you noticed that we haven&#39;t dealt with tuples until now. We only have transformed our input, we don&#39;t have a target yet. . TfmdLists is useful when you built a custom Transform that performs data preprocessing and returns tuples of inputs and targets. You can apply further transforms if you want, and then create a DataLoaders object with the dataloaders method. . . Usually however, you will have two parallel pipelines of transforms - one to convert your raw items to inputs, and one to convert raw items to targets (ie labels). To do this we can use Datasets. . Datasets . To complete our quick tour through fastai&#39;s midlevel API, we look at the Datasets class. It applies two (or more) pipelines in parallel to a list of raw items and builds tuples of the results. It performs very much like a TfmdLists object, in that it . automatically does the setup of all Transforms | supports training and validation sets | supports indexing | . The main difference is: When we index into it, it returns a tuple with the results of each pipeline. . Let&#39;s look at how to use it. For this toy example, let&#39;s pretend we want to classify whether a text contains at least one space (that&#39;s a dumb example, I know). For this we create a little labelling function in the form of a Transform. . class SpaceLabeller(Transform): def encodes(self, x): return int(&#39; &#39; in x) def decodes(self, x): return bool(x) . x_tfms = [lowercase, DumbTokenizer] y_tfms = [SpaceLabeller] dsets = Datasets(texts, [x_tfms, y_tfms], splits=splits) item = dsets.valid[1] item . ([10, 14, 13, 13, 8, 2, 7, 8, 22, 0], 0) . dsets.decode(item) . (&#39;konnichiwa&#39;, False) . At last, we can create a DataLoaders object from the Datasets. To enable processing on the GPU, two small tweaks are required. First, every item has to be converted to a tensor (often this will happen earlier, as one of the transforms in the pipeline). Second, we use a fastai function called pad_input to make every sequence the same length, since a tensor requires regular shape. . dls = dsets.dataloaders(bs=1, after_item=tensor, before_batch=pad_input) . dls.train_ds . (#2) [([7, 4, 11, 11, 14], 0),([6, 20, 19, 4, 13, 999, 19, 0, 6], 1)] . This is now a ready-for-training dataloader! . Conclusion . We looked at how to customize every step of the data transformation pipeline. As mentioned in the beginning, this is not a complete description of all the features available, but a good starting point for experimentation. I hope this was helpful to you, let me know if you have questions or suggestions for improvement at hannes@deeplearning.berlin or @daflowjoe on Twitter. .",
            "url": "https://deeplearning.berlin/fastai/data%20processing/2020/12/16/Understanding-fastai-midlevel-API.html",
            "relUrl": "/fastai/data%20processing/2020/12/16/Understanding-fastai-midlevel-API.html",
            "date": " • Dec 16, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Getting started with fast.ai",
            "content": "Welcome! . Summary: I cover some questions you might have regarding the fast.ai course. Then, I offer some advice that would have helped me in the beginning. . Who is this article for? . If you&#39;re reading this article, I assume you have heard about the terms deep learning, machine learning, or artificial intelligence. Maybe you are not too sure what they mean specifically, but you want to know more. Maybe you&#39;ve been searching for a while to finally learn about these concepts, but are overwhelmed by the magnitude of courses, books and software available. . Whether you are a software developer planning to add a new skillset, a student wanting to broaden your horizon, or an expert in a completely different field and you want to apply AI in your company or project: The fast.ai online course can be great for you to get started, and it&#39;s completely free! . . About fast.ai . fast.ai is an organization committed to making deep learning more accessible. It was founded by Jeremy Howard and Rachel Thomas, both distinguished data scientists. . They offer four major elements that can help you get into deep learning. . fastai (notice the missing dot), a software library that allows creating powerful deep learning models with few lines of code, while nonetheless being very customizable. | A free online course based on the library. | A book that is designed to go hand in hand with the course. It&#39;s available as a paper book, as an e-book or even for free on Github. | A forum with a very helpful community. | . For me, what really sets fast.ai apart from other online courses, is their practical approach: . We [are] always teaching through examples. We ensure that there is a context and a purpose that you can understand intuitively, rather than starting with algebraic symbol manipulation. . This does not mean that the foundations are not covered (they are!), but the order is different than in other books or courses, where you start with basic tools and only get to usable applications at the end of the course - if ever. . What is covered in the course? . The course covers major applications of deep learning. There is a certain focus on computer vision, but the other topics like tabular data, natural language processing (NLP), and recommender systems are explained as well. You will be able to create very well performing models in all of these areas, and as early as lecture 2 you can create a working web app that can recognize grizzly bears and brown bears (or anything else you choose). . Later in the course, you will learn the foundations of deep learning. You&#39;ll write code for stochastic gradient descent and activation functions from scratch. Don&#39;t worry if you never have heard about these, it&#39;s explained very well. You will dig deeper into PyTorch, the underlying software of fastai. . Also, there is a lecture (and a chapter) on Data Ethics. It is taught by Rachel Thomas and will give you a lot of food for thought. I think it&#39;s great that fastai encourages you to think about the possible implications of your work early on. . Should I get the book? . Since the book is freely available online in the form of notebooks, you might be wondering if you should get the printed book anyway. My opinion: If you can afford it - yes, you absolutely should get it! Its layout is beautiful, which makes it easier to read than the online version. Also, I personally just like to read a physical copy: my attention span is longer and I tend to take it more seriously. . That being said, you certainly can work with the free online version. It has the added benefit that you will always have the latest version, which is up to date and where bugs are fixed (and there are a few in the book). . . Do I need to know Python? . Yes - or any other language. The book is called &quot;Deep Learning for Coders&quot;, so it will not explain every line of code in detail or teach Python from scratch. In fact, the course website states: . The only prerequisite is that you know how to code (a year of experience is enough), preferably in Python, and that you have at least followed a high school math course. . However, you don&#39;t have to be an expert. When I first started with the course, I only had a few weeks of experience with Python. I did however have some (very basic) experience with web languages like JavaScript and PHP, that helped me pick up Python pretty quickly. If you know any programming language, you won&#39;t have a problem, since Python is rather accessible and has an easy syntax. If you don&#39;t have any programming experience, I recommend investing a few weeks to learn the basics of Python before you tackle fastai. There are wonderful tutorials available for free. . . I&#39;m in! How do I begin? . With lesson 1! 😊 You really can get started right away, the interactive content runs on ready-to-use and free platforms like Google Colab, so you don&#39;t have to spend time setting up your own machine. . The course website gives you an overview of the course (you can read it in addition to this article), then you can start with lesson 1. . I enjoyed combining the videos and the book. After every lesson, I ran the associated notebooks on Colab and then read the chapters in the book. The chapters are very similar to the video lessons, but I think it helps consuming the content in a different medium and being able to go back a few pages if you want to read something again. . My suggestions for efficient learning . Watch the videos twice . I recommend watching the videos twice. On the first view, don&#39;t focus on the details too much, just get an overview of the topics covered and take some notes while doing so. This is especially relevant for the later lessons that contain much more code. On the second view, you can take more detailed notes and try to get all the details. . Take notes! . Taking notes was a gamechanger for me. I think it&#39;s the best way to stay active during the videos, and over time the notes will serve as a central knowledge repository. Also, it&#39;s great to have a place to jot down your questions, so you can try and answer them later! . I keep notes in Microsoft OneNote, you can of course use any other application or paper. I created a template based on this awesome forum post. The template contains following points: . Key Points from the lecture | Advice from Jeremy | To-Do challenges from the further research section of the chapter, ideas for projects | Reading &amp; Exploring papers that are mentioned, stuff you find on the web but don&#39;t have time for at the moment | Questions that arise during the lecture | as the last point, I copy &amp; paste the questionnaire. | . Please read the above-mentioned forum post for details on each section, it&#39;s a really good system. . These notes are meant to be used not just once, but you should refine them and work with them continuously. They can serve you as your go-to resource every time you study. All your open questions, your project ideas, and of course lots of knowledge can live there. . . Don&#39;t get stuck on one thing that you don&#39;t understand . This is an important point and I think Jeremy mentions it as well. You don&#39;t have to understand every detail right away. It&#39;s often better to move on and revisit the part you didn&#39;t quite get later. . Run the code . Jeremy will ask you to do this, and you really should run the notebooks for yourself. I recommend the clean versions, where there is no text, just code. Predict what the output of a cell will be, and if you were wrong, go back and understand why. Just reading the code in the book is not enough, it can give you the illusion that you understood it, when in reality you could not reproduce it. I fell into this trap more than once... . Do the questionnaire . Take the time and answer every question in the questionnaire. This might take a while, but it makes sure that you really understood all important concepts. You can find answers to most questions in the forum. . Additionally, I can recommend aiquizzes.com, where many questions and their answers are made available together with the relevant part of the lecture. You can use this for spaced repetition learning, the website will remind you when older questions need reviewing, it&#39;s great. . Use other sources . Fastai, while being excellent, is not the only source of wisdom. I often google for concepts I don&#39;t quite get. More often than not I find a blog post, a stack overflow answer or a video explaining it very well or with a different approach than Jeremy. . What to do after the course . The course covers only around half the book. There will be a part 2 that covers the more advanced chapters, but as of now (December 2020) there is no release date announced. If you want to dig deeper into the material, you should not wait for the course but work through the book on your own. . In addition, I&#39;d suggest picking a project and make it as good as you can. Go on the forums and see if you can help others, or ask for advice. Write about your journey in your own blog - like the one whose first post you are reading here 😊 . Thank you for reading . Since you made it this far, I hope you found this article interesting and I could get you excited for fast.ai! I really can recommend taking the course and reading the book, and if you put in the time you will see amazing results soon. Let me know if you have any questions or found this article helpful. I&#39;m on Twitter, I&#39;d be happy to hear from you there or via mail at hannes@deeplearning.berlin .",
            "url": "https://deeplearning.berlin/fastai/getting%20started/online%20courses/2020/12/09/Getting-started-with-fastai.html",
            "relUrl": "/fastai/getting%20started/online%20courses/2020/12/09/Getting-started-with-fastai.html",
            "date": " • Dec 9, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hi! My name is Johannes Stutz, I usually go with Hannes. I am learning and writing about how machines can learn. My interest in all things AI began with my fascination with Tesla’s Autopilot software. Would it actually be possible for a car to drive itself in every situation? . I wanted to learn more about the technology behind this and have embarked on a journey into machine learning. Since I don’t have a professional background in coding or computer science, I go with “learning by doing”, an approach especially endorsed and offered by fast.ai’s great - and free - online courses. . I work as a pilot for a large airline. I think digitalization and AI can help aviation become more sustainable and even safer. But from my experience with partially automated systems, I also know how important it is to keep the human in the loop. AI should not replace humans, it should support them! . Reach out to me on Twitter, I enjoy talking and learning about machine learning, aviation, space flight… let’s nerd out! . . Thank you . This site is built with fastpages, An easy to use blogging platform with extra features for Jupyter Notebooks. . Thank you Clker-Free-Vector-Images on Pixabay for providing the skyline graphic. . Thank you to wal_172619 on Pixabay for the picture of Berlin TV tower. .",
          "url": "https://deeplearning.berlin/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://deeplearning.berlin/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}